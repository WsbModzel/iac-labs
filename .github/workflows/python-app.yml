# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Poetry Action
    # You may pin to the exact commit or the version.
    # uses: snok/install-poetry@93ada01c735cc8a383ce0ce2ae205a21c415379b
      uses: snok/install-poetry@v1.3.4
      with:
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true 

    - name: Install dependencies
      run: |
        poetry install --no-root
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
  lint:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app
        
    needs: build
    steps:
    - name: poetry lint
      run: |
        poetry run task lint


  formatter:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app
        
    needs: build
    steps:
    - name: poetry formatter
      run: |
        poetry run task formatter


  security:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app
        
    needs: build
    steps:
    - name: poetry security
      run: |
        poetry run task security


  test:
    runs-on: ubuntu-latest
  
    defaults:
      run:
        working-directory: ./example-app
        
    needs: build
    steps:
    - name: poetry test
      run: |
        poetry run task test



        
